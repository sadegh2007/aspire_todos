@using System.ComponentModel.DataAnnotations
@inject HttpClient Http
@inject Todos.HttpClient.ITodosHttpApi TodoApi
@inject ILocalStorageService LocalStorage
@inject IToastService Toast
@inject NavigationManager Navigation

<EditForm OnValidSubmit="SubmitTodo" Model="Todo" FormName="TodoForm" class="">
    <DataAnnotationsValidator />
    <div class="flex w-full mb-2">
        <label class="form-control w-full">
            <InputText
                type="text"
                @bind-Value="Todo!.Title"
                placeholder="type the task title..."
                class="focus:outline-0 input w-full"
            />
            <ValidationMessage For="@(() => Todo!.Title)"></ValidationMessage>
        </label>
        <button disabled="@Loading" type="submit" class="btn btn-primary ml-2">
            @if(Loading)
            {
                <span class="loading loading-spinner"></span>
            }
            @if (!Loading)
            {
                @:Add
            }
        </button>
    </div>
    <label class="form-control w-full">
        <InputTextArea
            rows="3"
            @bind-Value="Todo!.Summery"
            placeholder="Summery..."
            class="focus:outline-0 textarea w-full"
        />
        <ValidationMessage For="@(() => Todo!.Summery)"></ValidationMessage>
    </label>
</EditForm>

@code {
    [SupplyParameterFromForm]
    public UpsertTodoRequest? Todo { get; set; }

    private bool Loading { get; set; }
    
    protected override void OnInitialized()
    {
        Todo ??= new();
    }
    

    private async Task SubmitTodo()
    {
        Loading = true;
        
        try
        {
            var token = (await LocalStorage.GetItemAsStringAsync("token"))!;
            await TodoApi.CreateAsync(new()
            {
                Title = Todo!.Title!,
                Summery = Todo.Summery
            }, token);

            // Clear Form
            Todo = new();
        }
        catch (Exception ex)
        {
            Toast.ShowError(ex.Message);
        }

        Loading = false;
    }

    public class UpsertTodoRequest
    {
        [Required]
        public string? Title { get; set; }
        public string? Summery { get; set; }
    }
}